<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker容器化及Dockerfile编写</title>
      <link href="/2023/07/03/docker-rong-qi-hua-ji-dockerfile-bian-xie/"/>
      <url>/2023/07/03/docker-rong-qi-hua-ji-dockerfile-bian-xie/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker部署流程"><a href="#Docker部署流程" class="headerlink" title="Docker部署流程"></a>Docker部署流程</h1><h4 id="一、将程序打包成Docker镜像通常需要遵循以下步骤："><a href="#一、将程序打包成Docker镜像通常需要遵循以下步骤：" class="headerlink" title="一、将程序打包成Docker镜像通常需要遵循以下步骤："></a>一、将程序打包成Docker镜像通常需要遵循以下步骤：</h4><h5 id="1-创建Dockerfile："><a href="#1-创建Dockerfile：" class="headerlink" title="1.创建Dockerfile："></a>1.创建Dockerfile：</h5><p>Dockerfile是一个文本文件，其中定义了构建Docker镜像所需的步骤和指令。通常，它包含从基础镜像开始、应用程序的依赖安装、复制应用程序代码等指令。创建一个名为Dockerfile的文件，并在其中编写适合你的应用程序的指令。</p><h5 id="2-编写Dockerfile："><a href="#2-编写Dockerfile：" class="headerlink" title="2.编写Dockerfile："></a>2.编写Dockerfile：</h5><p>在Dockerfile中，你需要指定基础镜像、复制应用程序文件、设置工作目录、安装依赖项、暴露端口等。根据你的应用程序和需求，可以使用适当的基础镜像，例如python:3.9，并按照你的应用程序的语言和框架来设置适当的指令。</p><h5 id="3-构建Docker镜像："><a href="#3-构建Docker镜像：" class="headerlink" title="3.构建Docker镜像："></a>3.构建Docker镜像：</h5><p>使用Docker命令行工具来构建Docker镜像。在终端或命令提示符中，切换到包含Dockerfile的目录，然后运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t your-image-name:tag </span><br></pre></td></tr></table></figure><p>其中，<code>your-image-name</code>是你给镜像起的名称，<code>tag</code>可以是任意自定义的标签，.表示当前目录是构建上下文。</p><h5 id="4-等待构建完成："><a href="#4-等待构建完成：" class="headerlink" title="4.等待构建完成："></a>4.等待构建完成：</h5><p>Docker将执行Dockerfile中的每个指令，并构建镜像。这可能需要一些时间，具体时间取决于Dockerfile中的指令和操作的复杂性。<br>5.运行Docker镜像：构建完成后，可以使用以下命令运行Docker镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p host-port:container-port your-image-name:tag</span><br></pre></td></tr></table></figure><p>其中，<code>host-port</code>是宿主机上的端口号，<code>container-port</code>是容器内部正在运行的应用程序使用的端口号。<br>这些步骤可以让你将程序打包成Docker镜像。请注意，这只是一个简单的概述，具体的步骤可能因你的应用程序和需求而有所不同。还可以使用其他Docker相关工具和技术来进一步优化和管理Docker镜像，例如使用<strong>Docker Compose</strong>进行多容器应用的编排和部署。</p><h1 id="Dockerfile编写原则"><a href="#Dockerfile编写原则" class="headerlink" title="Dockerfile编写原则"></a>Dockerfile编写原则</h1><h4 id="1-基本编写示例"><a href="#1-基本编写示例" class="headerlink" title="1.基本编写示例"></a>1.基本编写示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Python的基础镜像</span></span><br><span class="line">FROM python:3.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制应用程序文件到容器中</span></span><br><span class="line">COPY . /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装应用程序依赖项</span></span><br><span class="line">RUN pip install --no-cache-dir -r requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露应用程序的端口</span></span><br><span class="line">EXPOSE 8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义默认启动命令</span></span><br><span class="line">CMD [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;app.py&quot;</span>]</span><br></pre></td></tr></table></figure><p>上述示例的Dockerfile假设你的应用程序是使用Python编写的，并且在同级目录下有一个名为<code>app.py</code>的文件和一个名为<code>requirements.txt</code>的依赖文件。</p><p>这个示例Dockerfile的步骤解释如下：</p><ul><li><code>FROM python:3.9</code>：指定基础镜像，使用了官方提供的Python 3.9镜像作为基础。</li><li><code>WORKDIR /app</code>：设置工作目录为<code>/app</code>，在容器中创建一个名为<code>/app</code>的目录，并将后续的操作都在这个目录进行。</li><li><code>COPY . /app</code>：将当前目录中的所有文件和文件夹复制到容器的<code>/app</code>目录中。</li><li><code>RUN pip install --no-cache-dir -r requirements.txt</code>：在容器内运行命令，安装Python应用程序的依赖项，使用<code>requirements.txt</code>文件中列出的依赖项。<code>--no-cache-dir</code>标志可避免缓存Python包。</li><li><code>EXPOSE 8000</code>：指定容器将监听的端口号，这里假设您的应用程序将在8000端口上运行。</li><li><code>CMD [&quot;python&quot;, &quot;app.py&quot;]</code>：定义容器的默认启动命令，以运行<code>app.py</code>文件的Python脚本。</li></ul><p>请根据你的实际应用程序和需求进行适当的修改和调整。记得在构建镜像时，在Dockerfile所在的目录执行<code>docker build -t your-image-name:tag .</code>命令进行构建。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fate联邦学习部署</title>
      <link href="/2023/07/03/fate-lian-bang-xue-xi-bu-shu/"/>
      <url>/2023/07/03/fate-lian-bang-xue-xi-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a><strong>一、准备</strong></h2><h5 id="1．-硬件"><a href="#1．-硬件" class="headerlink" title="1． 硬件"></a><strong>1</strong>． <strong>硬件</strong></h5><p>准备一台至少12核CPU、24G内存、1T硬盘（最好SSD）和一个不低于10MB能上互联网的网络。（最好能满足上面的条件，要不然即使安装的没有问题，也可能跑不起来）。</p><h5 id="2．-软件"><a href="#2．-软件" class="headerlink" title="2． 软件"></a><strong>2</strong>． 软件</h5><p>Ubuntu 18.04，CentOS 7</p><h2 id="二、Fate-Cluster部署"><a href="#二、Fate-Cluster部署" class="headerlink" title="二、Fate Cluster部署"></a><strong>二、Fate Cluster部署</strong></h2><h4 id="1-集群规划"><a href="#1-集群规划" class="headerlink" title="1. 集群规划"></a><strong>1.</strong> <strong>集群规划</strong></h4><table><thead><tr><th>参与者</th><th>角色</th><th>主机名</th><th>IP地址</th><th>操作系统</th><th>安装软件</th><th>服务</th></tr></thead><tbody><tr><td>1</td><td>移动，Guest 有标签方</td><td>fate_test_01</td><td>172.22.88.116</td><td>Ubuntu18.04</td><td>Fate</td><td>Fate_flow,fate_board,  clustermanager,nodemanager,  rollsite,mysql</td></tr><tr><td>2</td><td>银行，host 持有丰富字段方</td><td>fate_test_02</td><td>172.22.124.3</td><td>Ubuntu18.04</td><td>Fate</td><td>Fate_flow,fate_board,  clustermanager,nodemanager,  rollsite,mysql</td></tr></tbody></table><h4 id="2-架构图"><a href="#2-架构图" class="headerlink" title="2. 架构图"></a><strong>2.</strong> <strong>架构图</strong></h4><img src="fate联邦学习部署/image-20230626113237063.png" alt="image-20230626113237063" style="zoom:80%;" /><h4 id="3-组件说明"><a href="#3-组件说明" class="headerlink" title="3.组件说明"></a>3.组件说明</h4><img src="fate联邦学习部署/image-20230626113247803.png" alt="image-20230626113247803" style="zoom:80%;" /><h4 id="4、环境配置"><a href="#4、环境配置" class="headerlink" title="4、环境配置"></a>4、环境配置</h4><h5 id="4-1-hostname配置"><a href="#4-1-hostname配置" class="headerlink" title="4.1 hostname配置"></a>4.1 hostname配置</h5><p> 1）修改主机名</p><p>Host在172.22.124.3 root用户下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname fate_test_02</span><br></pre></td></tr></table></figure><p>Guest在172.22.88.116 root用户下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname fate_test_01</span><br></pre></td></tr></table></figure><p> 2）加入主机映射</p><p>在目标服务器（172.22.124.3 172.22.88.116）root用户下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p>添加内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.17.146 fate_test_01</span><br><span class="line"></span><br><span class="line">192.168.17.147 fate_test_02</span><br></pre></td></tr></table></figure><p>添加完成后，执行”su root”命令重新登录。</p><h5 id="4-2-关闭selinux"><a href="#4-2-关闭selinux" class="headerlink" title="4.2 关闭selinux"></a>4.2 关闭selinux</h5><p>在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）root用户下执行：</p><p>确认是否已安装selinux</p><p>centos系统执行：<code>rpm -qa | grep selinux</code></p><p>ubuntu系统执行：<code>apt list --installed | grep selinux</code></p><p>如果已安装了selinux就执行：<code>setenforce 0</code></p><h5 id="4-3-修改Linux系统参数"><a href="#4-3-修改Linux系统参数" class="headerlink" title="4.3 修改Linux系统参数"></a>4.3 修改Linux系统参数</h5><p>在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）root用户下执行：</p><p>1）清理20-nproc.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/security/limits.d</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -lrt 20-nproc.conf</span><br></pre></td></tr></table></figure><p>存在则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> 20-nproc.conf 20-nproc.conf_bak</span><br></pre></td></tr></table></figure><p>2）修改limits.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/security/limits.conf</span><br></pre></td></tr></table></figure><p> 添加下面的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 65535</span><br><span class="line"></span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line">* soft <span class="built_in">nproc</span> 65535</span><br><span class="line"></span><br><span class="line">* hard <span class="built_in">nproc</span> 65535</span><br></pre></td></tr></table></figure><p>重新登陆，<code>ulimit -a</code>查看是否生效</p><h5 id="4-4-关闭防火墙-可选"><a href="#4-4-关闭防火墙-可选" class="headerlink" title="4.4 关闭防火墙(可选)"></a>4.4 关闭防火墙(可选)</h5><p><strong>在目标服务器（172.22.124.3 172.22.88.116）root用户下执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br><span class="line">2.systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line">3.systemctl status firewalld.service</span><br></pre></td></tr></table></figure><h5 id="4-5-创建APP用户"><a href="#4-5-创建APP用户" class="headerlink" title="4.5 创建APP用户"></a>4.5 创建APP用户</h5><p>在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）root用户下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 6000 apps</span><br><span class="line"></span><br><span class="line">useradd -s /bin/bash -g apps -d /home/app app</span><br><span class="line"></span><br><span class="line">passwd app</span><br></pre></td></tr></table></figure><p>如果存在app用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /bin/bash -g apps -d /home/app app</span><br><span class="line"></span><br><span class="line">passwd app</span><br></pre></td></tr></table></figure><p>app初始密码设置为123456</p><h5 id="4-6-给APP用户配置sudo"><a href="#4-6-给APP用户配置sudo" class="headerlink" title="4.6 给APP用户配置sudo"></a>4.6 给APP用户配置sudo</h5><p> 在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）root用户下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sudoers.d/app</span><br></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line">app ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">Defaults !env_reset</span><br></pre></td></tr></table></figure><p>给文件sudoers文件增加写入权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+w /etc/sudoers</span><br></pre></td></tr></table></figure><p>编辑 sudoers文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>在root  ALL=(ALL)    ALL下面追加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root  ALL=(ALL)    NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">app   ALL=(ALL)    ALL</span><br><span class="line"></span><br><span class="line">app   ALL=(ALL)    NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p> 给文件sudoers文件删除写入权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u-w /etc/sudoers</span><br></pre></td></tr></table></figure><h5 id="4-7-增加虚拟内存"><a href="#4-7-增加虚拟内存" class="headerlink" title="4.7 增加虚拟内存"></a>4.7 增加虚拟内存</h5><p> <strong>在目标服务器（172.22.124.3 172.22.88.116）root用户下执行</strong></p><p>生产环境使用时，因内存计算需要增加128G虚拟内存，执行前需检查存储空间是否足够。</p><p>手工创建，root用户执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/data/swapfile128G bs=1024 count=134217728</span><br><span class="line"></span><br><span class="line">mkswap /data/swapfile128G</span><br><span class="line"></span><br><span class="line">swapon /data/swapfile128G</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/swaps</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/data/swapfile128G swap swap defaults 0 0&#x27;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><h5 id="4-8-设置projects目录"><a href="#4-8-设置projects目录" class="headerlink" title="4.8 设置projects目录"></a><strong>4.8</strong> 设置projects目录</h5><p> <strong>在目标服务器（172.22.124.3 172.22.88.116）root用户下执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"><span class="built_in">mkdir</span> projects</span><br><span class="line"><span class="built_in">chown</span> app:apps projects</span><br><span class="line"><span class="built_in">ls</span> -l</span><br><span class="line"><span class="built_in">chown</span> -R app /data</span><br></pre></td></tr></table></figure><h5 id="4-9-配置两台服务器ssh无密登录（Fate部署的前提）"><a href="#4-9-配置两台服务器ssh无密登录（Fate部署的前提）" class="headerlink" title="4.9 配置两台服务器ssh无密登录（Fate部署的前提）"></a><strong>4.9</strong> 配置两台服务器ssh无密登录（Fate部署的前提）</h5><p>1）配置自身免密</p><p>在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）app用户下执行</p><p>在虚拟机fate_test_01 上以app用户身份在home目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su app</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt;/home/app/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p> 使用ssh <em>172.22.88.116</em>命令测试，第一次需要确认yes ,之后应可以不需密码登录为成功。</p><p>在fate_test_02 上执行相同步骤配置fate_test_02 的自身免密登录。</p><p>2）配置fate_test_01 免密登录fate_test_02</p><p>在fate_test_01 app用户下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/authorized_keys app@ 172.22.124.3:/home/app/.ssh</span><br></pre></td></tr></table></figure><p>输入fate_test_02的app密码</p><p>在fate_test_02 app用户下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; /home/app/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">scp ~/.ssh/authorized_keys app@172.22.88.116:/home/app/.ssh</span><br></pre></td></tr></table></figure><p>输入fate_test_01 的app密码完成文件传输。 </p><p>在fate_test_01 app用户下执行</p><p>*<strong>ssh 172.22.88.116*</strong></p><p>应不需要密码即可登录fate_test_02机。</p><p>到这里我们已经完成环境的配置了。</p><h4 id="5-项目部署"><a href="#5-项目部署" class="headerlink" title="5.项目部署"></a>5.项目部署</h4><h5 id="5-1-获取项目"><a href="#5-1-获取项目" class="headerlink" title="5.1 获取项目"></a>5.1 获取项目</h5><p>在host服务器（172.22.124.3 具备外网环境）app用户下执行</p><p>进入执行节点的/data/projects/目录，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/projects/</span><br><span class="line"></span><br><span class="line">wget https://webank-ai-1251170195.cos.ap-guangzhou.myqcloud.com/fate_cluster_install_1.6.0_release-c7-u18.tar.gz</span><br><span class="line"></span><br><span class="line">tar xzf fate_cluster_install_1.6.0_release-c7-u18.tar.gz</span><br></pre></td></tr></table></figure><h5 id="5-2-部署前检查"><a href="#5-2-部署前检查" class="headerlink" title="5.2 部署前检查"></a>5.2 部署前检查</h5><p>在目标服务器（<em>172.22.124.3</em> <em>172.22.88.116</em>）app用户下执行</p><p>把检查脚本fate-cluster-install/tools-install/check.sh从172.22.124.3拷贝到172.22.88.116</p><p>#在host 172.88.124.3和guest 172.22.88.116服务器上分别执行检查脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./check.sh</span><br></pre></td></tr></table></figure><p>#确认app用户已配置sudo</p><p>#虚拟内存，size不低于128G，如不满足需参考4.6章节重新设置</p><p>#文件句柄数，不低于65535，如不满足需参考4.3章节重新设置</p><p>#用户进程数，不低于64000，如不满足需参考4.3章节重新设置</p><p>#确认部署前没有fate进程和端口冲突</p><p>#确认/etc/my.cnf是否存在，存在需要mv；确认是否存在/data/projects/fate目录，存在需把fate目录mv备份。</p><h5 id="5-3-配置文件修改和示例"><a href="#5-3-配置文件修改和示例" class="headerlink" title="5.3 配置文件修改和示例"></a><strong>5.3</strong> <strong>配置文件修改和示例</strong></h5><p><strong>注：拉取源码后只需要配置部署文件setup.conf</strong></p><p>在银行即host服务器（172.22.124.3）app用户下执行</p><p>修改配置文件fate-cluster-install/allInone/conf/setup.conf.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi fate-cluster-install/allInone/conf/setup.conf</span><br></pre></td></tr></table></figure><p>配置文件setup.conf说明：</p><img src="fate联邦学习部署/image-20230626113135298.png" alt="image-20230626113135298" style="zoom:67%;" /><img src="fate联邦学习部署/image-20230626113128221.png" alt="image-20230626113128221" style="zoom:67%;" /><img src="fate联邦学习部署/image-20230626113118893.png" alt="image-20230626113118893" style="zoom:67%;" /><p><strong>1）</strong> <strong>两台主机partyA+partyB同时部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#to install role</span></span><br><span class="line">roles=( <span class="string">&quot;host&quot;</span> <span class="string">&quot;guest&quot;</span> )</span><br><span class="line">version=<span class="string">&quot;1.6.0&quot;</span></span><br><span class="line"><span class="comment">#project base</span></span><br><span class="line">pbase=<span class="string">&quot;/data/projects&quot;</span></span><br><span class="line"><span class="comment">#log directory</span></span><br><span class="line">lbase=<span class="string">&quot;/data/logs&quot;</span></span><br><span class="line"><span class="comment">#user who connects dest machine by ssh</span></span><br><span class="line">ssh_user=<span class="string">&quot;app&quot;</span></span><br><span class="line">ssh_group=<span class="string">&quot;apps&quot;</span></span><br><span class="line"><span class="comment">#ssh port</span></span><br><span class="line">ssh_port=22</span><br><span class="line"><span class="comment">#eggroll_db name</span></span><br><span class="line">eggroll_dbname=<span class="string">&quot;eggroll_meta&quot;</span></span><br><span class="line"><span class="comment">#fate_flow_db name</span></span><br><span class="line">fate_flow_dbname=<span class="string">&quot;fate_flow&quot;</span></span><br><span class="line"><span class="comment">#mysql init root password</span></span><br><span class="line">mysql_admin_pass=<span class="string">&quot;fate_dev&quot;</span></span><br><span class="line"><span class="comment">#redis passwd</span></span><br><span class="line">redis_pass=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#mysql user</span></span><br><span class="line">mysql_user=<span class="string">&quot;fate&quot;</span></span><br><span class="line"><span class="comment">#mysql port</span></span><br><span class="line">mysql_port=<span class="string">&quot;3306&quot;</span></span><br><span class="line"><span class="comment">#host party id</span></span><br><span class="line">host_id=<span class="string">&quot;10000&quot;</span></span><br><span class="line"><span class="comment">#host ip</span></span><br><span class="line">host_ip=<span class="string">&quot;172.22.124.3&quot;</span></span><br><span class="line"><span class="comment">#host mysql ip</span></span><br><span class="line">host_mysql_ip=<span class="string">&quot;<span class="variable">$&#123;host_ip&#125;</span>&quot;</span></span><br><span class="line">host_mysql_pass=<span class="string">&quot;fate_deV2999&quot;</span></span><br><span class="line"><span class="comment">#guest party id</span></span><br><span class="line">guest_id=<span class="string">&quot;9999&quot;</span></span><br><span class="line"><span class="comment">#guest ip</span></span><br><span class="line">guest_ip=<span class="string">&quot;172.22.88.116&quot;</span></span><br><span class="line"><span class="comment">#guest mysql ip</span></span><br><span class="line">guest_mysql_ip=<span class="string">&quot;<span class="variable">$&#123;guest_ip&#125;</span>&quot;</span></span><br><span class="line">guest_mysql_pass=<span class="string">&quot;fate_deV2999&quot;</span></span><br><span class="line"><span class="comment">#db module lists</span></span><br><span class="line">dbmodules=( <span class="string">&quot;mysql&quot;</span> )</span><br><span class="line"><span class="comment">#base module lists</span></span><br><span class="line">basemodules=( <span class="string">&quot;tools&quot;</span> <span class="string">&quot;base&quot;</span> <span class="string">&quot;java&quot;</span> <span class="string">&quot;python&quot;</span> <span class="string">&quot;eggroll&quot;</span> <span class="string">&quot;fate&quot;</span> )</span><br><span class="line">fateflow_grpc_port=9360</span><br><span class="line">fateflow_http_port=9380</span><br><span class="line">fateboard_port=8080</span><br><span class="line">rollsite_port=9370</span><br><span class="line">clustermanager_port=4670</span><br><span class="line">nodemanager_port=4671</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>配置数据upload参数(修改本地训练数据存储路径)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi fate_flow/examples/upload_guest.json</span><br></pre></td></tr></table></figure><p><img src="fate%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2/image-20230703095714410.png" alt="image-20230703095714410"></p><p>银行（合作企业，无标签，但拥有更多特征字段）作为host方，也只需修改host_ip,guest_ip以及file路径即可完成配置</p><h5 id="5-4-部署"><a href="#5-4-部署" class="headerlink" title="5.4 部署"></a>5.4 部署</h5><p>银行即host主机按照上述配置含义修改setup.conf文件对应的配置项后，然后在fate-cluster-install/allInone目录下执行部署脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> fate-cluster-install/allInone</span><br><span class="line"></span><br><span class="line"><span class="built_in">nohup</span> sh ./deploy.sh &gt; logs/boot.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><img src="fate联邦学习部署/image-20230626113012587.png" alt="image-20230626113012587" style="zoom:80%;" /><p>部署日志输出在fate-cluster-install/allInone/logs目录下,实时查看是否有报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f ./logs/deploy.log （部署结束，查看一下即可）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-guest.log （实时打印GUEST端的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-mysql-guest.log  （实时打印GUEST端mysql的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-host.log    （实时打印HOST端的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-mysql-host.log    （实时打印HOST端mysql的部署情况）</span><br><span class="line"></span><br><span class="line">deploy.log出现以下内容说明安装完成 </span><br><span class="line"></span><br><span class="line">init over</span><br><span class="line">deploy guest mysql  172.22.124.3  over</span><br><span class="line">deploy guest 172.22.124.3  over</span><br><span class="line">deploy host mysql 172.22.88.116  over</span><br><span class="line">deploy host 172.22.88.116  over</span><br><span class="line"></span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy.log （部署结束，查看一下即可）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-guest.log （实时打印GUEST端的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-mysql-guest.log  （实时打印GUEST端mysql的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-host.log    （实时打印HOST端的部署情况）</span><br><span class="line"><span class="built_in">tail</span> -f ./logs/deploy-mysql-host.log    （实时打印HOST端mysql的部署情况）</span><br><span class="line"></span><br><span class="line">deploy.log出现以下内容说明安装完成 </span><br><span class="line">init over</span><br><span class="line">deploy guest mysql  172.22.124.3  over</span><br><span class="line">deploy guest 172.22.124.3  over</span><br><span class="line">deploy host mysql 172.22.88.116  over</span><br><span class="line">deploy host 172.22.88.116  over</span><br></pre></td></tr></table></figure><h5 id="5-5-问题定位"><a href="#5-5-问题定位" class="headerlink" title="5.5 问题定位"></a>5.5 问题定位</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1）eggroll日志</span></span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/bootstrap.clustermanager.err</span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/clustermanager.jvm.err.log</span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/nodemanager.jvm.err.log</span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/bootstrap.nodemanager.err</span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/bootstrap.rollsite.err</span><br><span class="line">/data/projects/fate/eggroll/logs/eggroll/rollsite.jvm.err.log</span><br><span class="line"><span class="comment"># 2）fateflow日志</span></span><br><span class="line">/data/projects/fate/python/logs/fate_flow/</span><br><span class="line"><span class="comment"># 3）fateboard日志</span></span><br><span class="line">/data/projects/fate/fateboard/logs</span><br></pre></td></tr></table></figure><h4 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a><strong>6.</strong> <strong>测试</strong></h4><p><strong>任务背景</strong></p><p><strong>举例：</strong>移动与银行联合建模，移动有用于机器学习训练的标签Y（用户信誉等级），期望优化移动自己的模型。</p><p><strong>背景：</strong>对新入网用户，如何快速判定信誉等级，传统方法是根据用户历史行为信息进行判断，但对新入网且实际信誉良好的用户，由于初始数据较少，在用户入网初期系统认定的信誉等级可能较低，从而使得新入网且实际信誉良好的用户享受不到匹配的权益，造成客户流失；</p><p><strong>数据来源：</strong></p><p>训练数据均为模拟数据集</p><p><strong>设定：</strong></p><p>只有移动有数据标签用户电话号ID，信用积分X4,每月消费X5,Y=用户信誉等级</p><p>银行无法暴露含有隐私的字段x1,x2,x3（考虑到隐私保护，训练时字段名称对对方不可见）</p><img src="fate联邦学习部署/image-20230626112927216.png" alt="image-20230626112927216" style="zoom:80%;" /><p><strong>传统建模方法的问题：</strong></p><p>移动在给新入网用户判断信誉等级时，只利用移动目前拥有的字段建模效果还不够理想，需要借助拥有共同用户的银行的更丰富字段；</p><p>银行考虑到隐私保护不能将字段x1,x2,x3全部传输给移动；</p><p><strong>期望结果：</strong></p><p>保护隐私条件下，联合训练模型</p><p>联合训练模型效果优于单边训练模型</p><p><strong>训练角色：</strong></p><p>移动为guest方（持有标签），银行为host方</p><h5 id="6-1-部署测试"><a href="#6-1-部署测试" class="headerlink" title="6.1 部署测试"></a>6.1 部署测试</h5><p>结合上述例子，设置三个参数，guest_partyid为移动方，host_partyid为银行方，work_mode为1表示集群训练方式</p><p>此测试您需要设置3个参数：guest_partyid，host_partyid，work_mode。</p><h6 id="6-1-1-集群联通性测试"><a href="#6-1-1-集群联通性测试" class="headerlink" title="6.1.1 集群联通性测试"></a>6.1.1 集群联通性测试</h6><p>1）移动方部署的主机172.22.88.116 将测试脚本中guest_partyid（移动）和host_partyid（银行）都设置9999</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/projects/fate/bin/init_env.sh</span><br><span class="line"><span class="built_in">cd</span> /data/projects/fate/examples/toy_example/</span><br><span class="line">python run_toy_example.py 9999 9999 1</span><br></pre></td></tr></table></figure><p><img src="fate%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2/image-20230703100139514.png" alt="image-20230703100139514"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/projects/fate/bin/init_env.sh</span><br><span class="line"><span class="built_in">cd</span> /data/projects/fate/examples/toy_example/</span><br><span class="line">python run_toy_example.py 9999 9999 1</span><br></pre></td></tr></table></figure><p>toy_example是模拟上述场景<strong>集群连通性</strong>的例子，运行出现如下结果表示集群中各主机可以联通：</p><p>“2020-04-28 18:26:20,789 - secure_add_guest.py[line:126] - INFO: success to calculate secure_sum, it is 1999.9999999999998”</p><p><img src="fate%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2/image-20230703100207320.png" alt="image-20230703100207320"></p><h6 id="6-1-2-双边测试"><a href="#6-1-2-双边测试" class="headerlink" title="6.1.2 双边测试"></a>6.1.2 双边测试</h6><p>在集群联通性良好的前提下，以上述例子为例，下图给出移动和银行的联合字段，以下表格中的数据将fate-9999节点的数据单独在本地PC训练，以及双方纵向联邦训练所得模型分别在测试集上的数据结果：</p><img src="fate联邦学习部署/image-20230626111231534.png" alt="image-20230626111231534" style="zoom:80%;" /><p>下表所示结果是模拟上述例子中的业务数据联合训练出的模拟结果，综上所述，纵向联邦学习的模型结果明显要好一些。</p><img src="fate联邦学习部署/image-20230626111252540.png" alt="image-20230626111252540" style="zoom:80%;" /><h5 id="6-2-FateBoard查看训练结果"><a href="#6-2-FateBoard查看训练结果" class="headerlink" title="6.2 FateBoard查看训练结果"></a>6.2 FateBoard查看训练结果</h5><p>移动和银行都可在自己服务器的<a href="http://localhost:8080查看训练结果">http://localhost:8080查看训练结果</a></p><p>注意：在host方只能看到当前节点由guest方的特征选择，无法看到字段对应的阈值</p><img src="fate联邦学习部署/image-20230626111504312.png" alt="image-20230626111504312" style="zoom:67%;" /><img src="fate联邦学习部署/image-20230626111513658.png" alt="image-20230626111513658" style="zoom:80%;" /><h4 id="7-系统运维"><a href="#7-系统运维" class="headerlink" title="**7.**系统运维"></a>**7.**系统运维</h4><h5 id="7-1-服务管理"><a href="#7-1-服务管理" class="headerlink" title="7.1 服务管理"></a>7.1 服务管理</h5><p>在目标服务器（172.22.124.3 172.22.88.116）app用户下执行</p><p>7.1.1 Eggroll服务管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/projects/fate/bin/init_env.sh</span><br><span class="line"><span class="built_in">cd</span> /data/projects/fate/eggroll</span><br></pre></td></tr></table></figure><p>启动/关闭/查看/重启所有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./bin/eggroll.sh all start/stop/status/restart</span><br></pre></td></tr></table></figure><p>启动/关闭/查看/重启单个模块(可选：clustermanager，nodemanager，rollsite)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./bin/eggroll.sh clustermanager start/stop/status/restart</span><br></pre></td></tr></table></figure><p>7.1.2 Mysql服务管理</p><p>启动/关闭/查看/重启mysql服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/projects/fate/common/mysql/mysql-8.0.13</span><br><span class="line">sh ./service.sh start|stop|status|restart</span><br></pre></td></tr></table></figure><p>7.1.3 Fate服务管理</p><ol><li>启动/关闭/查看/重启fate_flow服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/projects/fate/bin/init_env.sh</span><br><span class="line"><span class="built_in">cd</span> /data/projects/fate/python/fate_flow</span><br><span class="line">sh service.sh start|stop|status|restart</span><br></pre></td></tr></table></figure><p>如果逐个模块启动，需要先启动eggroll和mysql再启动fateflow，fateflow依赖eggroll的启动。</p><ol start="2"><li>启动/关闭/重启fateboard服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/projects/fate/fateboard</span><br><span class="line">sh service.sh start|stop|status|restart</span><br></pre></td></tr></table></figure><h5 id="7-2-查看进程和端口"><a href="#7-2-查看进程和端口" class="headerlink" title="7.2 查看进程和端口"></a>7.2 查看进程和端口</h5><p>在目标服务器（172.22.124.3 172.22.88.116 ）app用户下执行</p><p>7.2.1 查看进程</p><p>#根据部署规划查看进程是否启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -i clustermanager</span><br><span class="line">ps -ef | grep -i nodemanager</span><br><span class="line">ps -ef | grep -i rollsite</span><br><span class="line">ps -ef | grep -i fate_flow_server.py</span><br><span class="line">ps -ef | grep -i fateboard</span><br></pre></td></tr></table></figure><p>7.2.2 查看进程端口</p><p>#根据部署规划查看进程端口是否存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#clustermanager</span></span><br><span class="line">netstat -tlnp | grep 4670</span><br><span class="line"><span class="comment">#nodemanager</span></span><br><span class="line">netstat -tlnp | grep 4671</span><br><span class="line"><span class="comment">#rollsite</span></span><br><span class="line">netstat -tlnp | grep 9370</span><br><span class="line"><span class="comment">#fate_flow_server</span></span><br><span class="line">netstat -tlnp | grep 9360</span><br><span class="line"><span class="comment">#fateboard</span></span><br><span class="line">netstat -tlnp | grep 8080</span><br></pre></td></tr></table></figure><h5 id="7-3-服务日志"><a href="#7-3-服务日志" class="headerlink" title="7.3 服务日志"></a>7.3 服务日志</h5><p>服务日志路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eggroll/data/projects/fate/eggroll/logs</span><br><span class="line">fate_flow&amp;任务日志/data/projects/fate/python/logs</span><br><span class="line">fateboard/data/projects/fate/fateboard/logs</span><br><span class="line">mysql/data/logs/mysql/</span><br></pre></td></tr></table></figure><h5 id="7-4-查看训练参数"><a href="#7-4-查看训练参数" class="headerlink" title="7.4 查看训练参数"></a>7.4 查看训练参数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出模型在数据集上的预测结果用</span></span><br><span class="line">-f component_metric_all;</span><br><span class="line"><span class="comment">#输出训练好的模型用</span></span><br><span class="line">-f component_output_model;</span><br><span class="line"><span class="comment">#输出中间结果的数据用</span></span><br><span class="line">-f component_output_data;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mechine learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/06/29/fate-pei-zhi-wen-dang/"/>
      <url>/2023/06/29/fate-pei-zhi-wen-dang/</url>
      
        <content type="html"><![CDATA[<p>完成部署后：</p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629182051321.png" alt="image-20230629182051321"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629182508252.png" alt="image-20230629182508252"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629182618165.png" alt="image-20230629182618165"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629182705590.png" alt="image-20230629182705590"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629182739632.png" alt="image-20230629182739632"></p><p>单边测试：</p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629183336257.png" alt="image-20230629183336257"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629183850384.png" alt="image-20230629183850384"></p><p>环境检测脚本：</p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629183926815.png" alt="image-20230629183926815"></p><p>双边测试：</p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629184232275.png" alt="image-20230629184232275"></p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629184251011.png" alt="image-20230629184251011"></p><p>FATEBoard展板：</p><p><img src="Fate%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/image-20230629184610491.png" alt="image-20230629184610491"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>细菌基因组组装</title>
      <link href="/2022/11/17/xi-jun-ji-yin-zu-zu-zhuang/"/>
      <url>/2022/11/17/xi-jun-ji-yin-zu-zu-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="基因组组装"><a href="#基因组组装" class="headerlink" title="基因组组装"></a>基因组组装</h2><p>目前推荐两种主流的基因组组装方式：</p><p>附：MD5校验数据完整性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md5sum</span> -c &lt;*md5.txt&gt;</span><br></pre></td></tr></table></figure><h3 id="Spades（一）"><a href="#Spades（一）" class="headerlink" title="Spades（一）"></a>Spades（一）</h3><p>简介：主流的组装方式中对于单基因组装，二代测序用Spades组装成草图的效果最好，辅以unicycler外加三代测序进行矫正可以得到质量很高的完成图。</p><h5 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h5><p>github：<a href="https://github.com/ablab/spades">https://github.com/ablab/spades</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">wget http://cab.spbu.ru/files/release3.15.5/SPAdes-3.15.5-Linux.tar.gz</span><br><span class="line">tar -zxvf SPAdes-xxx-Linux.tar.gz</span><br><span class="line"><span class="built_in">cd</span> SPAdes-xxx-Linux/bin</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">./spades.py --<span class="built_in">test</span></span><br><span class="line"><span class="comment"># 常规使用</span></span><br><span class="line">./spades.py --pe1-1 gene_1.fq.gz --pe1-2 gene_2.fq.gz -t  8 -k  15,21,33,55,77,99,127   --cov-cutoff    auto    --careful   -o output</span><br><span class="line"><span class="comment"># 推荐终端后台挂机使用</span></span><br><span class="line"><span class="built_in">nohup</span> ./spades.py --pe1-1 gene_1.fq.gz --pe1-2 gene_2.fq.gz -t  8 -k  15,21,33,55,77,99,127   --cov-cutoff    auto    --careful   -o output &gt;output.file 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment"># 结果集存于output，运行状态文件输出至output.file</span></span><br></pre></td></tr></table></figure><h3 id="Megahit（二）"><a href="#Megahit（二）" class="headerlink" title="Megahit（二）"></a>Megahit（二）</h3><p>简介：megahit常用于宏基因组数据组装，其处理速度极佳，组装质量尚可，在无过高质量要求且项目进度紧迫时的最佳选择。megahit是SOAPdenovo2的官方升级版，各方面性能均优于前者，因此较为推荐。</p><h5 id="软件下载："><a href="#软件下载：" class="headerlink" title="软件下载："></a>软件下载：</h5><p>github：<a href="https://github.com/voutcn/megahit">https://github.com/voutcn/megahit</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda安装</span></span><br><span class="line">conda install -c bioconda megahit</span><br><span class="line"><span class="comment"># 直接下载二进制文件</span></span><br><span class="line">wget https://github.com/voutcn/megahit/releases/download/v1.2.9/MEGAHIT-1.2.9-Linux-x86_64-static.tar.gz </span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zvxf MEGAHIT-1.2.9-Linux-x86_64-static.tar.gz   </span><br><span class="line"><span class="built_in">cd</span> MEGAHIT-1.2.9-Linux-x86_64-static/bin/ <span class="comment">#可以看到目录下的可执行文件megahit</span></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">./megahit -1 gene_1.fq.gz -2 gene_2.fq.gz -o assemble</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基因组组装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spades </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda使用</title>
      <link href="/2022/11/14/conda-shi-yong/"/>
      <url>/2022/11/14/conda-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Conda-教程"><a href="#Conda-教程" class="headerlink" title="Conda 教程"></a>Conda 教程</h1><h2 id="To-create-a-new-env"><a href="#To-create-a-new-env" class="headerlink" title="To create a new env."></a>To create a new env.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create --name snowflakes biopython # name后接env名，空格后接预置library名</span><br><span class="line">conda create --name mypthon3 python=3.6 numpy</span><br></pre></td></tr></table></figure><h2 id="Use-env"><a href="#Use-env" class="headerlink" title="Use env"></a>Use env</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">activate &quot;env_name&quot;</span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure><h2 id="Envs-info"><a href="#Envs-info" class="headerlink" title="Envs info"></a>Envs info</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs # 查看所有conda_</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户管理与删除</title>
      <link href="/2022/10/18/linux-yong-hu-guan-li-yu-shan-chu/"/>
      <url>/2022/10/18/linux-yong-hu-guan-li-yu-shan-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户管理"><a href="#Linux用户管理" class="headerlink" title="Linux用户管理"></a>Linux用户管理</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.创建新用户</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">useradd newuser</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.删除用户</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">userdel newuser<span class="comment">#此时只是删除了用户，而未删除用户主目录</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.完全删除用户及其主目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf /var/spool/mail/newuser</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf /home/newuser</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.更方便的操作</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">userdel -r newuser<span class="comment">#此时是将用户的主目录一起删除(/etc/passwd,/etc/shadow,/etc/group等，同时删除用户的主目录)</span></span></span><br></pre></td></tr></table></figure><p>如果默认用户名，则修改当前用户的口令。</p><p>例如，假设当前用户是user，则下面的命令修改该用户自己的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ passwd </span><br><span class="line">Old password:****** </span><br><span class="line">New password:******* </span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># passwd user </span><br><span class="line">New password:******* </span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><h3 id="用户口令的管理"><a href="#用户口令的管理" class="headerlink" title="用户口令的管理"></a>用户口令的管理</h3><p>用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。</p><p>指定和修改用户口令的Shell命令是<code>passwd</code>。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 选项 用户名</span><br></pre></td></tr></table></figure><p>可使用的选项：</p><ul><li>-l 锁定口令，即禁用账号。</li><li>-u 口令解锁。</li><li>-d 使账号无口令。</li><li>-f 强迫用户下次登录时修改口令。</li></ul><p>如果默认用户名，则修改当前用户的口令。</p><p>例如，假设当前用户是user，则下面的命令修改该用户自己的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ passwd </span><br><span class="line">Old password:****** </span><br><span class="line">New password:******* </span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># passwd user </span><br><span class="line">New password:******* </span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p><p>为用户指定空口令时，执行下列形式的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -d user</span><br></pre></td></tr></table></figure><p>此命令将用户 user的口令删除，这样用户 user下一次登录时，系统就不再允许该用户登录了。</p><p>passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -l user</span><br></pre></td></tr></table></figure><h3 id="提升用户权限"><a href="#提升用户权限" class="headerlink" title="提升用户权限"></a>提升用户权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 先登录具有root权限的用户</span><br><span class="line">sudo nano /etc/sudoers</span><br><span class="line"># 修改如下部分</span><br><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)     ALL</span><br><span class="line">（需提权的用户名）   ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Barrnap预测rRNA基因</title>
      <link href="/2022/10/14/barrnap-yu-ce-rrna-ji-yin/"/>
      <url>/2022/10/14/barrnap-yu-ce-rrna-ji-yin/</url>
      
        <content type="html"><![CDATA[<h1 id="Barrnap预测"><a href="#Barrnap预测" class="headerlink" title="Barrnap预测"></a>Barrnap预测</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install <span class="operator">-</span>c bioconda <span class="operator">-</span>c conda<span class="operator">-</span>forge barrnap</span><br></pre></td></tr></table></figure><h3 id="从fasta文件中提取rRNA"><a href="#从fasta文件中提取rRNA" class="headerlink" title="从fasta文件中提取rRNA"></a>从fasta文件中提取rRNA</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">barrnap \</span><br><span class="line"><span class="operator">--</span>kingdom bac \</span><br><span class="line"><span class="operator">--</span>threads <span class="number">4</span> \</span><br><span class="line"><span class="operator">--</span>outseq outwork.fa \</span><br><span class="line">testfile.fasta <span class="operator">&gt;</span> test.gff3</span><br></pre></td></tr></table></figure><p><code>--kingdom</code>参数指定物种类型，<code>bac</code>代表细菌，<code>arc</code>代表古菌，<code>euk</code>代表真核生物，<code>mito</code>代表后生动物线粒体；<code>--threads</code>指定并行的线程数;<code>--outseq</code>: 保存结果序列；<code>&gt;</code>输出汇总表</p><p><strong>该软件支持以下类型的rRNA的预测</strong></p><ol><li>bacteria (5S,23S,16S),</li><li>archaea (5S,5.8S,23S,16S),</li><li>metazoan mitochondria (12S,16S)</li><li>eukaryotes (5S,5.8S,28S,18S)</li></ol><h5 id="结果集："><a href="#结果集：" class="headerlink" title="结果集："></a>结果集：</h5><p><img src="image-20221014134558962-16657263605661-16657263624793.png"></p><p><img src="image-20221014134638954-16657264003665-16657264019047.png"></p><h4 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h4><p>一个基因组会出现多条5S 23S 16S，可能是组装错误引起的，为了方便研究可以针对比较完整的（1.5KB）左右的16S rRNA进行分析</p>]]></content>
      
      
      <categories>
          
          <category> 生信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rRNA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diamond生信比对教程</title>
      <link href="/2022/10/08/diamond-sheng-xin-bi-dui-jiao-cheng/"/>
      <url>/2022/10/08/diamond-sheng-xin-bi-dui-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Diamond教程"><a href="#Diamond教程" class="headerlink" title="Diamond教程"></a>Diamond教程</h1><h3 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1.下载安装包"></a>1.下载安装包</h3><p>wget <a href="http://github.com/bbuchfink/diamond/releases/download/v0.9.25/diamond-linux64.tar.gz">http://github.com/bbuchfink/diamond/releases/download/v0.9.25/diamond-linux64.tar.gz</a> </p><h3 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h3><p>进入到下载目录解压文件</p><p>tar -zxvf diamond-linux64.tar.gz</p><h3 id="3-部署bin根目录启动"><a href="#3-部署bin根目录启动" class="headerlink" title="3.部署bin根目录启动"></a>3.部署bin根目录启动</h3><p>sudo mv diamond  /usr/local/bin</p><hr><p>如上软件安装完成！</p><hr><h3 id="4-配置数据库"><a href="#4-配置数据库" class="headerlink" title="4.配置数据库"></a>4.配置数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载nr库</span></span><br><span class="line"><span class="built_in">nohup</span> wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment"># 解压nr压缩包</span></span><br><span class="line">gunzip nr.gz</span><br><span class="line"><span class="comment"># 建库</span></span><br><span class="line">diamond makedb --<span class="keyword">in</span> nr --db nr</span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">####NCBI-nr数据库下载</span></span><br><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz</span><br><span class="line"><span class="comment">####env_nr(来自环境的nr）数据库下载</span></span><br><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/env_nr.gz</span><br><span class="line"><span class="comment">####swissprot,高质量的蛋白数据库下载，蛋白序列得到实验的验证</span></span><br><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/swissprot.gz</span><br><span class="line"><span class="comment">###通用蛋白质资源（UniProt90）</span></span><br><span class="line">wget ftp://ftp.expasy.org/databases/uniprot/current_release/uniref/uniref90/uniref90.fasta.gz</span><br></pre></td></tr></table></figure><h3 id="5-比对"><a href="#5-比对" class="headerlink" title="5.比对"></a>5.比对</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># blastp 蛋白比对</span><br><span class="line">diamond blastp --db nr -q input.faa -o protein_matches_fmt6.txt</span><br><span class="line"># blastx DNA比对</span><br><span class="line">diamond blastx --db nr -q input.fna -o dna_matches_fmt6.txt</span><br></pre></td></tr></table></figure><p>注：默认以–outfmt 6输出结果和BLAST+的–outfmt 6结果一致</p><!--其他可以使用diamond help查询--><h3 id="6-结果解读"><a href="#6-结果解读" class="headerlink" title="6.结果解读"></a>6.结果解读</h3><p><img src="image-20221010132713997-16653796405821-16653796464373.png"></p><p>Diamond默认设置下输出表格格式的结果。</p><p>结果12列，其结果信息和BLAST默认设置-outfmt 6输出的格式完全一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. query序列ID</span><br><span class="line">2. subject序列ID</span><br><span class="line">3. Identity百分比</span><br><span class="line">4. 匹配长度</span><br><span class="line">5. 错配长度</span><br><span class="line">6. 打开Gap的次数</span><br><span class="line">7. query序列起始位点</span><br><span class="line">8. query序列结束位点</span><br><span class="line">9. subject序列起始位点</span><br><span class="line">10. subject序列结束位点</span><br><span class="line">11. E-vaule值</span><br><span class="line">12. bitscore得分</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux后台命令</title>
      <link href="/2022/09/26/linux-hou-tai-ming-ling/"/>
      <url>/2022/09/26/linux-hou-tai-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="这里记录终端后台操作命令："><a href="#这里记录终端后台操作命令：" class="headerlink" title="这里记录终端后台操作命令："></a>这里记录终端后台操作命令：</h1><h1 id="Linux常用后台操作命令"><a href="#Linux常用后台操作命令" class="headerlink" title="Linux常用后台操作命令"></a>Linux常用后台操作命令</h1><h5 id="1-command-gt-ouk-file-2-gt-amp-1-amp"><a href="#1-command-gt-ouk-file-2-gt-amp-1-amp" class="headerlink" title="1.command &gt; ouk.file 2&gt;&amp;1 &amp;"></a>1.<code>command &gt; ouk.file 2&gt;&amp;1 &amp;</code></h5><p>后台运行命令，并且将输出重定向至文件，便于查看，缺点此时不占用终端，但终端关闭，命令停止</p><h5 id="2-nohup-command-amp"><a href="#2-nohup-command-amp" class="headerlink" title="2.nohup command &amp;"></a>2.<code>nohup command &amp;</code></h5><p>不挂起命令，关闭终端继续在后台执行</p><h5 id="3-nohup-command-gt-myout-file-2-gt-amp-1-amp"><a href="#3-nohup-command-gt-myout-file-2-gt-amp-1-amp" class="headerlink" title="3.nohup command &gt; myout.file 2&gt;&amp;1 &amp;"></a>3.<code>nohup command &gt; myout.file 2&gt;&amp;1 &amp;</code></h5><p>推荐方式，后台挂起，重定向输出命令</p><h2 id="控制后台命令"><a href="#控制后台命令" class="headerlink" title="控制后台命令"></a>控制后台命令</h2><p>jobs<br>查看当前有多少在后台运行的命令。<br>jobs -l选项可显示所有任务的PID，jobs的状态可以是running, stopped, Terminated。但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识。</p><p>ctrl + z</p><p>暂停当前命令</p><p>fg</p><p>继续当前命令</p><p>ctrl + c</p><p>终端正在执行的命令</p><h5 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h5><p>常用修改当前用户环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bahrc</span><br><span class="line"><span class="comment"># 文件末尾添加路径</span></span><br><span class="line"><span class="built_in">export</span> PATH=/src/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 使生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="ssh远端登录进入Conda环境"><a href="#ssh远端登录进入Conda环境" class="headerlink" title="ssh远端登录进入Conda环境"></a>ssh远端登录进入Conda环境</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;~/anaconda3/bin:$PATH&quot;&#x27;</span>&gt;&gt;~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="终端进程控制"><a href="#终端进程控制" class="headerlink" title="终端进程控制"></a>终端进程控制</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前终端进行的任务</span></span><br><span class="line"><span class="built_in">jobs</span></span><br><span class="line"><span class="comment"># 查看系统进行的进程</span></span><br><span class="line">ps </span><br><span class="line"><span class="comment">#查看所有当前用户的进程</span></span><br><span class="line">ps -aux </span><br><span class="line"><span class="comment"># 杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> %pid/jobnum</span><br><span class="line"><span class="comment"># 强制杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 %pid/jobnum</span><br><span class="line"><span class="comment"># 将前台执行的进程放入后台暂停</span></span><br><span class="line">Ctrl + z</span><br><span class="line"><span class="comment"># 将后台暂停命令，后台执行</span></span><br><span class="line"><span class="built_in">bg</span> %jobnum</span><br><span class="line"><span class="comment"># 将后台命令调前台继续运行</span></span><br><span class="line"><span class="built_in">fg</span> %jobnum</span><br></pre></td></tr></table></figure><h5 id="系统控制命令"><a href="#系统控制命令" class="headerlink" title="系统控制命令"></a>系统控制命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看CPU信息</span></span><br><span class="line"><span class="built_in">cat</span> /proc/cpuinfo</span><br><span class="line"><span class="comment"># 查看cpu/交换区等使用情况</span></span><br><span class="line">top</span><br><span class="line"><span class="comment"># 查看内存、交换区情况</span></span><br><span class="line">free</span><br><span class="line"><span class="comment"># 显示磁盘分区上磁盘可用空间</span></span><br><span class="line"><span class="built_in">df</span> -a <span class="comment"># 查看全部文件系统，单位默认KB</span></span><br><span class="line"><span class="built_in">df</span> -h <span class="comment"># 常用，高可读性，单位MB等</span></span><br></pre></td></tr></table></figure><h1 id="开机自动启动ssh命令"><a href="#开机自动启动ssh命令" class="headerlink" title="开机自动启动ssh命令"></a>开机自动启动ssh命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable ssh</span><br></pre></td></tr></table></figure><h1 id="关闭ssh开机自动启动命令"><a href="#关闭ssh开机自动启动命令" class="headerlink" title="关闭ssh开机自动启动命令"></a>关闭ssh开机自动启动命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable ssh</span><br></pre></td></tr></table></figure><h1 id="单次开启ssh"><a href="#单次开启ssh" class="headerlink" title="单次开启ssh"></a>单次开启ssh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh</span><br></pre></td></tr></table></figure><h1 id="单次关闭ssh"><a href="#单次关闭ssh" class="headerlink" title="单次关闭ssh"></a>单次关闭ssh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop ssh</span><br></pre></td></tr></table></figure><h1 id="设置好后重启系统"><a href="#设置好后重启系统" class="headerlink" title="设置好后重启系统"></a>设置好后重启系统</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>#查看ssh是否启动，看到Active: active (running)即表示成功<br>sudo systemctl status ssh</p><h1 id="配置国内源"><a href="#配置国内源" class="headerlink" title="配置国内源"></a>配置国内源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"><span class="comment"># 替换内容</span></span><br><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker-compose</span></span><br><span class="line">sudo apt install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动docker</span></span><br><span class="line"><span class="comment"># 查看docker服务是否启动</span></span><br><span class="line">sudo systemctl status docker</span><br><span class="line"><span class="comment"># 如果没有启动</span></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux端后台操作命令： </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Http协议</title>
      <link href="/2022/09/21/http-xie-yi/"/>
      <url>/2022/09/21/http-xie-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP协议："><a href="#HTTP协议：" class="headerlink" title="HTTP协议："></a>HTTP协议：</h2><p>HTTP 是一个基于 TCP/IP 通信协议来传递数据（HTML 文件、图片文件、查询结果等）</p><p>HTTP-&gt;http:// + 80</p><p>HTTPS-&gt;https:// + 443</p><h2 id="HTTP消息结构："><a href="#HTTP消息结构：" class="headerlink" title="HTTP消息结构："></a>HTTP消息结构：</h2><p>1.基于客户端/服务端（C/S）架构模型，是一个无状态请求/响应协议</p><p>2.HTTP使用统一资源标识符（Uniform Resource Identifiers，URI）来传输数据和建立连接</p><p>3.建立连接后，数据消息通过类似Internet邮件格式[RFC5322]和多用途Internet邮件拓展（MIME）[RFC2045]来传送。</p><h2 id="客户端请求消息："><a href="#客户端请求消息：" class="headerlink" title="客户端请求消息："></a>客户端请求消息：</h2><p><img src="image-20220921155013160-16637466215121.png"></p><p>即：<strong>请求行、请求头、空行、请求数据</strong></p><h2 id="服务器响应消息："><a href="#服务器响应消息：" class="headerlink" title="服务器响应消息："></a>服务器响应消息：</h2><p><strong>状态行、消息包头、空行、响应正文</strong></p><p><img src="image-20220921155253359-16637467759183-16637467790075.png"></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面实例是一点典型的使用GET来传递数据的实例：</p><p>客户端请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /hello.txt HTTP/1.1</span><br><span class="line">User-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3</span><br><span class="line">Host: www.example.com</span><br><span class="line">Accept-Language: en, mi</span><br></pre></td></tr></table></figure><p>服务端响应:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 27 Jul 2009 12:28:53 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT</span><br><span class="line">ETag: &quot;34aa387-d-1568eb00&quot;</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Content-Length: 51</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Type: text/plain</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World! My payload includes a trailing CRLF.</span><br></pre></td></tr></table></figure><h2 id="HTTP请求方法（6种）："><a href="#HTTP请求方法（6种）：" class="headerlink" title="HTTP请求方法（6种）："></a>HTTP请求方法（6种）：</h2><table><thead><tr><th align="left">序号</th><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">GET</td><td align="left">请求指定的页面信息，并返回实体主体。</td></tr><tr><td align="left">2</td><td align="left">HEAD</td><td align="left">类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td align="left">3</td><td align="left">POST</td><td align="left">向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td align="left">4</td><td align="left">PUT</td><td align="left">从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td align="left">5</td><td align="left">DELETE</td><td align="left">请求服务器删除指定的页面。</td></tr><tr><td align="left">6</td><td align="left">CONNECT</td><td align="left">HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td align="left">7</td><td align="left">OPTIONS</td><td align="left">允许客户端查看服务器的性能。</td></tr><tr><td align="left">8</td><td align="left">TRACE</td><td align="left">回显服务器收到的请求，主要用于测试或诊断。</td></tr><tr><td align="left">9</td><td align="left">PATCH</td><td align="left">是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table><h2 id="HTTP响应头信息："><a href="#HTTP响应头信息：" class="headerlink" title="HTTP响应头信息："></a>HTTP响应头信息：</h2><table><thead><tr><th align="left">应答头</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Allow</td><td align="left">服务器支持哪些请求方法（如GET、POST等）。</td></tr><tr><td align="left">Content-Encoding</td><td align="left">文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。</td></tr><tr><td align="left">Content-Length</td><td align="left">表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入 ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。</td></tr><tr><td align="left">Content-Type</td><td align="left">表示后面的文档属于什么MIME类型。Servlet默认为text/plain，但通常需要显式地指定为text/html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。</td></tr><tr><td align="left">Date</td><td align="left">当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td></tr><tr><td align="left">Expires</td><td align="left">应该在什么时候认为文档已经过期，从而不再缓存它？</td></tr><tr><td align="left">Last-Modified</td><td align="left">文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。</td></tr><tr><td align="left">Location</td><td align="left">表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。</td></tr><tr><td align="left">Refresh</td><td align="left">表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader(“Refresh”, “5; URL=<a href="http://host/path&quot;)%E8%AE%A9%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%BB%E5%8F%96%E6%8C%87%E5%AE%9A%E7%9A%84%E9%A1%B5%E9%9D%A2%E3%80%82">http://host/path&quot;)让浏览器读取指定的页面。</a> 注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV=”Refresh” CONTENT=”5;URL=<a href="http://host/path&quot;%EF%BC%9E%E5%AE%9E%E7%8E%B0%EF%BC%8C%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E6%88%96%E9%87%8D%E5%AE%9A%E5%90%91%E5%AF%B9%E4%BA%8E%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8CGI%E6%88%96Servlet%E7%9A%84HTML%E7%BC%96%E5%86%99%E8%80%85%E5%8D%81%E5%88%86%E9%87%8D%E8%A6%81%E3%80%82%E4%BD%86%E6%98%AF%EF%BC%8C%E5%AF%B9%E4%BA%8EServlet%E6%9D%A5%E8%AF%B4%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%AE%BE%E7%BD%AERefresh%E5%A4%B4%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E3%80%82">http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。</a>  注意Refresh的意义是”N秒之后刷新本页面或访问指定页面”，而不是”每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV=”Refresh” …＞。  注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</td></tr><tr><td align="left">Server</td><td align="left">服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td></tr><tr><td align="left">Set-Cookie</td><td align="left">设置和页面关联的Cookie。Servlet不应使用response.setHeader(“Set-Cookie”, …)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。</td></tr><tr><td align="left">WWW-Authenticate</td><td align="left">客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm=＼”executives＼””)。 注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td></tr></tbody></table><h2 id="HTTP状态码："><a href="#HTTP状态码：" class="headerlink" title="HTTP状态码："></a>HTTP状态码：</h2><p>常见状态码：</p><ul><li><strong>200 - 请求成功</strong></li><li><strong>301 - 资源（网页等）被永久转移到其它URL</strong></li><li><strong>404 - 请求的资源（网页等）不存在</strong></li><li><strong>500 - 内部服务器错误</strong></li></ul><table><thead><tr><th align="left">分类</th><th align="left">分类描述</th></tr></thead><tbody><tr><td align="left">1**</td><td align="left">信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td align="left">2**</td><td align="left">成功，操作被成功接收并处理</td></tr><tr><td align="left">3**</td><td align="left">重定向，需要进一步的操作以完成请求</td></tr><tr><td align="left">4**</td><td align="left">客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td align="left">5**</td><td align="left">服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> web net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CD-hit安装及使用</title>
      <link href="/2022/09/21/cd-hit-an-zhuang-ji-shi-yong/"/>
      <url>/2022/09/21/cd-hit-an-zhuang-ji-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="CD-hit安装及使用"><a href="#CD-hit安装及使用" class="headerlink" title="CD-hit安装及使用"></a>CD-hit安装及使用</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><h4 id="cd-hit下载："><a href="#cd-hit下载：" class="headerlink" title="cd-hit下载："></a>cd-hit下载：</h4><p>网址：<a href="https://github.com/weizhongli/cdhit/releases">https://github.com/weizhongli/cdhit/releases</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载ch-hit</span></span><br><span class="line">wget https://github.com/weizhongli/cdhit/releases/download/V4.8.1/cd-hit-v4.8.1-2019-0228.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf cd-hit-v4.8.1-2019-0228.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译</span></span><br><span class="line">cd cd-hit-auxtools</span><br><span class="line">make</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd-hit -i nr -o nr100 -c 1.00 -n 5 -M 16000 –d 0 -T 8</span><br><span class="line">cd-hit -i db -o db90 -c 0.9 -n 5 -M 16000 –d 0 -T 8</span><br><span class="line"><span class="built_in">where</span></span><br><span class="line">db is the filename of input,</span><br><span class="line">db90 is output, </span><br><span class="line">-c 1.0, means 100% identity, is the clustering threshold</span><br><span class="line">-c 0.9, means 90% identity, is the clustering threshold</span><br><span class="line">-n 5 is the word size</span><br><span class="line">-d 0 use sequence name <span class="keyword">in</span> fasta header till the first white space</span><br><span class="line">-M 16000, to use 16GB RAM</span><br><span class="line">-T 8, to use 8 threads</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Choose of word size:</span><br><span class="line">-n 5 for thresholds 0.7 ~ 1.0</span><br><span class="line">-n 4 for thresholds 0.6 ~ 0.7</span><br><span class="line">-n 3 for thresholds 0.5 ~ 0.6</span><br><span class="line">-n 2 for thresholds 0.4 ~ 0.5</span><br></pre></td></tr></table></figure><h4 id="需查看更多选项："><a href="#需查看更多选项：" class="headerlink" title="需查看更多选项："></a>需查看更多选项：</h4><p><code>cd-hit -h</code></p>]]></content>
      
      
      <categories>
          
          <category> Bioinfomatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> protein </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MetaGeneS</title>
      <link href="/2022/09/20/metagenes/"/>
      <url>/2022/09/20/metagenes/</url>
      
        <content type="html"><![CDATA[<h1 id="MetaGeneS"><a href="#MetaGeneS" class="headerlink" title="MetaGeneS"></a>MetaGeneS</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># gff文件一共9列，分别如下：</span><br><span class="line">①seqid（序列ID）：通常为染色体的ID；</span><br><span class="line">②source（注释的来源）：表示产生此文件的软件或方法；</span><br><span class="line">③type（类型）：表示区间特性类型，如gene，repeat_region，exon，CDS等；</span><br><span class="line">④start（起始位点）：特征区间的起始位置；</span><br><span class="line">⑤end（结束位点）：特征区间的终止位置；</span><br><span class="line">⑥score（得分）：表示注释信息可靠性；</span><br><span class="line">⑦strand（正/负链）：&quot;＋&quot;：正链，&quot;－&quot;：负链；</span><br><span class="line">⑧phase（步进）：对于编码蛋白质的CDS，本列指定下一个密码子开始的位置。可以是0，1，2。表示到达下一个密码子要跳过的碱基个数;</span><br><span class="line">⑨attribut（属性）：基因ID，长度等信息；多个属性之间用&quot;;&quot;分号分隔。</span><br></pre></td></tr></table></figure><h5 id="结果文件"><a href="#结果文件" class="headerlink" title="结果文件"></a>结果文件</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Escherichia_coli.gff #储存基因结构信息</span><br><span class="line">Escherichia_coli_gene.fasta #预测基因组的核苷酸序列</span><br><span class="line">Escherichia_coli_protein.fasta #预测基因组的蛋白质序列</span><br></pre></td></tr></table></figure><h5 id="下载方法"><a href="#下载方法" class="headerlink" title="下载方法"></a>下载方法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载软件和密钥</span><br><span class="line">wget http://topaz.gatech.edu/GeneMark/tmp/GMtool_dHlO8/gms2_linux_64.tar.gz</span><br><span class="line">wget http://topaz.gatech.edu/GeneMark/tmp/GMtool_dHlO8/gm_key_64.gz</span><br><span class="line"># 解压软件</span><br><span class="line">tar -zxvf gms2_linux_64.tar.gz</span><br><span class="line">gunzip -c gm_key_64.gz &gt; ~/.gmhmmp2_key</span><br><span class="line"># 将软件添加到环境变量</span><br><span class="line">vim ~/.bashrc</span><br><span class="line">PATH=$PATH:/opt/biosoft/gms2_linux_64</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://exon.gatech.edu/GeneMark/</span><br></pre></td></tr></table></figure><p><img src="wlop-43se.jpg"></p><p><img src="image-20220927175255611.png" alt="image-20220927175255611"></p><h3 id="使用-RAPT-组装和注释您的原核基因组"><a href="#使用-RAPT-组装和注释您的原核基因组" class="headerlink" title="使用 RAPT 组装和注释您的原核基因组"></a>使用 RAPT 组装和注释您的原核基因组</h3><p>读取组装和注释管道工具 (RAPT) 是一种易于使用的试点服务，用于从<strong>细菌或古细菌分离物</strong>测序的公共或私人 Illumina 基因组读取的<em><strong>从头*组装和基因注释</strong>。RAPT 由三个主要组件组成，即基因组组装器 <a href="https://pubmed.ncbi.nlm.nih.gov/30286803/">SKESA</a>、分类分配工具 <a href="https://pubmed.ncbi.nlm.nih.gov/29792589/">ANI</a>和原核基因组注释管道 ( <a href="https://pubmed.ncbi.nlm.nih.gov/27342282/">PGAP</a> )，并在几个小时内生成</em><em>质量与 RefSeq 相当的注释基因组（</em>*<a href="https://www.ncbi.nlm.nih.gov/rapt/documentation/">了解有关 RAPT</a>的更多信息）。</p><p>使用 RAPT，您将：</p><ul><li><strong>将您的读数组装</strong>成重叠群</li><li>为程序集<strong>分配一个学名</strong></li><li>根据专家策划的数据（例如隐马尔可夫模型和保守域架构） <em>从头</em><strong>预测编码和非编码基因，包括抗微生物耐药性 (AMR) 基因和毒力因子</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>socket进程间通信</title>
      <link href="/2022/09/20/socket-jin-cheng-jian-tong-xin/"/>
      <url>/2022/09/20/socket-jin-cheng-jian-tong-xin/</url>
      
        <content type="html"><![CDATA[<h1 id="socket进程间通信"><a href="#socket进程间通信" class="headerlink" title="socket进程间通信"></a>socket进程间通信</h1><h2 id="1-本地进程间通信（IPC）："><a href="#1-本地进程间通信（IPC）：" class="headerlink" title="1.本地进程间通信（IPC）："></a>1.本地进程间通信（IPC）：</h2><p>​        消息传递（管道、FIFO、消息队列）</p><p>​        同步（互斥量、条件变量、读写锁、文件和写记录锁、信号量）</p><p>​        共享内存（匿名和具名，mail）</p><p>​        远程过程调用（Solaris门和Sun RPC）</p><h2 id="2-socket基本操作"><a href="#2-socket基本操作" class="headerlink" title="2.socket基本操作"></a>2.socket基本操作</h2><h5 id="socket-函数："><a href="#socket-函数：" class="headerlink" title="socket()函数："></a>socket()函数：</h5><p><code>int socket(int domain, int type, int protocol);</code></p><ul><li>domain：即协议域，又称为协议族（family）。常用的协议族有，AF_INET、AF_INET6、AF_LOCAL（或称AF_UNIX，Unix域socket）、AF_ROUTE等等。协议族决定了socket的地址类型，在通信中必须采用对应的地址，如AF_INET决定了要用ipv4地址（32位的）与端口号（16位的）的组合、AF_UNIX决定了要用一个绝对路径名作为地址。</li><li>type：指定socket类型。常用的socket类型有，SOCK_STREAM、SOCK_DGRAM、SOCK_RAW、SOCK_PACKET、SOCK_SEQPACKET等等（socket的类型有哪些？）。</li><li>protocol：故名思意，就是指定协议。常用的协议有，IPPROTO_TCP、IPPTOTO_UDP、IPPROTO_SCTP、IPPROTO_TIPC等，它们分别对应TCP传输协议、UDP传输协议、STCP传输协议、TIPC传输协议。</li></ul><h2 id="3-socket中TCP三次握手"><a href="#3-socket中TCP三次握手" class="headerlink" title="3.socket中TCP三次握手"></a>3.socket中TCP三次握手</h2><ul><li>客户端向服务器发送一个SYN J</li><li>服务器向客户端响应一个SYN K，并对SYN J进行确认ACK J+1</li><li>客户端再想服务器发一个确认ACK K+1</li></ul><p><img src="97209d9c3394eb4cf950be75ffc38c56.jpg" alt="meinv"></p>]]></content>
      
      
      <categories>
          
          <category> web net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grep笔记</title>
      <link href="/2022/09/19/grep-bi-ji/"/>
      <url>/2022/09/19/grep-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="grep用法："><a href="#grep用法：" class="headerlink" title="grep用法："></a>grep用法：</h1><h3 id="定义：用于文本查找"><a href="#定义：用于文本查找" class="headerlink" title="定义：用于文本查找"></a>定义：用于文本查找</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#从file中查找带有‘keyword’关键字的行</span></span><br><span class="line">$ grep keyword file</span><br><span class="line">└─$ grep L unicom.sh </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello from LG, thanks for testing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#从多个文件中查找关键字</span></span><br><span class="line"><span class="string">$ grep keyword file1 file2 file3</span></span><br><span class="line"><span class="string">└─$ grep -l for  unicom.sh</span></span><br><span class="line"><span class="string">unicom.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#递归查找目标文件夹中所有目标信息的文件，并可实现精确过滤</span></span><br><span class="line"><span class="string">$ grep -r for ./file    </span></span><br><span class="line"><span class="string">./file/unicom.sh:echo &quot;</span>Hello from LG, thanks <span class="keyword">for</span> testing.</span><br><span class="line">                                                                                      </span><br><span class="line">$ grep -r <span class="keyword">for</span> ./file | grep DEVICE</span><br><span class="line">                                                                                       </span><br><span class="line">$ grep -r <span class="keyword">for</span> ./file | grep sh    </span><br><span class="line">./file/unicom.sh:<span class="built_in">echo</span> <span class="string">&quot;Hello from LG, thanks for testing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#加入 -v 参数，反转grep匹配</span></span><br><span class="line"><span class="string">$ grep -v keyword file</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win常用操作</title>
      <link href="/2022/09/18/blog-one/"/>
      <url>/2022/09/18/blog-one/</url>
      
        <content type="html"><![CDATA[<h1 id="win操作"><a href="#win操作" class="headerlink" title="win操作"></a>win操作</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. 关键词➕:torrent</span><br><span class="line">2. “番号”</span><br><span class="line">3. win➕D 快速关闭页面</span><br><span class="line">4. ctrl➕z 恢复误删文件</span><br><span class="line">5. ctrl➕A➕F2 批量命名</span><br><span class="line">6. win➕E 资源管理器</span><br><span class="line">7. ctrl➕del 永久删除</span><br><span class="line">8. ctrl➕tab 页面间切换</span><br><span class="line">9. win➕r 输入osk 打开虚拟键盘</span><br><span class="line">10. ctrl➕shift➕t 恢复已关掉的页面</span><br><span class="line">11. .LOG 记事簿时间显示</span><br><span class="line">12. win➕X 快速设置</span><br><span class="line">13. ctrl➕f5 强制刷新</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blogs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first attempt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/18/hello-world/"/>
      <url>/2022/09/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
